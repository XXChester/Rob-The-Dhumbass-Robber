============================
	Objectives	V1
============================
Entry into my first ever dev competition and it is the GameDev.net community weekend challenge starting May 12th, 2011 at noon to May 16th, 2011 at Noon. My plan is to get something in a playable
state by the end of the competition. I do not intend to place but rather just use this as a learning opportunity.

Placed 4th in the competition (Yes I am considering 4th a place because there were 4 prizes). There was a total of 12 submissions and many that did not make the deadline and failed
to submit there game.

============================
	Objectives	V2
============================
Continue on with the development and finish the game off to make it more fun than it already is after the competition and implement some scrapped features. Also want to go back and clean
up the code that got rushed near the end of the competition and became quite messy. Create more content.

============================
	Core(Phase 1)
============================
Raw version of the game functional with programmer art
[*]Planning
[*]Placeholder art
[*]Model objects
[*]Make important models script accessible
[*]Render the board
[*]Render the player
[*]Make the player movable
[*]Change the image based on the direction the player is moving in
[*]Render the treasure
[*]Make the player able to catch the treasure
[*]Render guards
[*]Put collision detection in with the walls		Wasted a mountain of time here trying to figure out a way to generate the bounding boxes on the fly
[*]Make guards patrol the halls
[*]Make the guards chase the player if he is seen
[*]Major bug with the AI walking through Non-walkable spaces
[*]Put in collision detection with the player
[*]Clean up AI so that it always walks down the middle of the square not the edge
[*]Clean up collision detection so that it doesn't bounce you around...instead you just don't move if it will result in a collision...provisional CD opposed to reaction CD
[*]Implement Player detection via radius
[*]Make a HUD
[*]Implement flow mechanism
[*]Render main menu screen
[*]Render in game menu screen

============================
	Core(Phase 1.5)
============================
Fix major problems with the game and implement some of the features that got scrapped due to time
[*]Create in game editor for placing guards, treasure etc
[*]Change all data to xml based
[*]Add in garbage cans to hide in
[*]Put doors in	-wasn't going to put these in but should put locked doors in that only guards can walk through
	[*]Alter engine's A* algorithms to handle variable terrain costs in preparation for locked doors
[*]Design an algorithm for automatically generating bounding boxes
[*]Every guard gets there own AI thread ATM, this is unncessary. Change the AI manager to be single threaded and guards put a request to the manager when they need a new path
[*]Alternate flow to go from a "game over state"(regardless of win/loose etc) to the map selection screen
[*]Guards and player actually start in the middle of their square, not on the left edge in the middle
[*]Rewrite guard movement code, it is a giant mess from the competition and only works for left/right movement (in the sense of walking down the missle of a tile)
[*]Write an input manager
[*]Pull the game over screen out of the GameDisplay....I crammed this into that display due to crunch at the end of the competition...now do it properly
[*]Change exit tile to be written in white and than load it's colour threw the XML loader
	-Didn't want this to be dynamic so made it so that it always renders red. The problem was for certain colours of the walls the exit tile would render black and not red(desired)
[*]Move bounding boxes down to represent the feet in the tile now as we are now sort of taking on a 2.5D perspective
[*]Need a graphic for mode select screen
[*]How to play screen
[*]Need a new graphic for the main menu since most of the information on that screen is now redundant
[*]In game menu needs a new graphic
[*]Refactor the floor and map objects into a MapWalls and MapFloor object and load the tiles from the layers respectively

============================
	Polish(Phase 2)
============================
Replace the programmer art with less crappy programmer art and make the game not only maintain its functionality but also add a nice playable environment and add additional functionality
[*]Make timer have decimal places
[*]Delay the start of the level so the user can have a look at the layout	***
[*]Screen fades in and out (Transitions)
[*]Robber and guard sprites
[*]Change the tile placer program to write multiple layers so that the floor is not hardcoded to a white square, it can now have a real texture applied
[*]Upgrade floor tile graphics
[*]Upgrade radius ring graphic
[*]Uprade door tile graphic
[*]Need a sfx on entry to the mode select screen
[*]Sfx emotes
[*]Sfx
[*]Door Sfx
[*]Garbage Sfx
[*]Rotate idle sfxs
[*]Change map previews to load from Maps directory instead of through the content pipeline
[*]Multiple maps read from directory		-Hard coded at this time because I don't have time to figure out how to change the content pipeline, making it very easy to add maps though
	[*]Hard coded but very easy to add new ones		-Can create and map indentifiers for a new map in about 30minutes
[*]Map select screen
[*]Change sprite direction determination for up and down, base it on last direction
[*]More maps		-Biggest complaint from the competition was there was only 3 levels and 2 were very similar
[]Compaign mode?
[]Arcade mode
[*]Sub mode of time attack or normal? Time attack makes you compete against a fast clock, otherwise you get a default time such as 5 minutes to solve the puzzle
[*]Re-org maps into a scaling difficulty
[*]Change police detection sfx
[*]Change detection via timer sfx
[*]Time colours based on remaining
[*]Left pad timer so it is always positioned in the same spot
[]Instead of a visual cinematic do the following
	[]Alter intro SFX to include wood breaking etc at the beginning
	[]On transition in have a particle emitter emit a couple dust particles

===========================
		ISSUES
==========================
[*]AI can sometimes walk through walls		--All the logic is correct it is just the AI is not walking down the middle of the square which it needs to
	[*]Cleaned up a bit but needs another pass
	-What a nightmare this was, there were a couple MAJOR bugs in the code. In total between during competition trying to fix this and post-comp probably spent about 10 hours debugging it
[*]With the new manager the AI can sometimes bounce back and forth several times before actually thinking it caught the player
[*]AI cannot get the player if they are against an outer wall
[*]If you agro the AI with the new algorithm for their walking paths they will get stuck
[*]Clicking on the Return to Main button near where the Exit button spawns will exit the game....if I get to transitions that should fix the issue
[*]Radius detection bounding spehere is not computing correctly on the south/east side
[*]Nasty flash when you hit replay			-caused by the reset() call
[*]Score resets as soon as you click replay on game over
[*]Major bug in the tile editor, the width is padded + 1, once the editor is fixed you need to remap all 3 maps, and rip out the padding all over the code.
[*]Minor Memory leak when the game goes to game over
[*]In level 1 once the AI makes a complete round and are back at the beginning they both start to walk in same direction. Counter-clockwise guy gets the right waypoint but longest path
[*]AI manager rarely throws an InvalidOperation exception on startup due to the collection being modified...even though it is wrapped in a lock statement
[*]AI is throwing an excepton on resets for Map4
[]Audio API is still throwing an exception
	{"Attempted to read or write protected memory. This is often an indication that other memory is corrupt."}
   at Microsoft.Xna.Framework.Audio.AudioCallbackDispatcher.IsEventRegistered(EventType type)
   at Microsoft.Xna.Framework.Audio.AudioCallbackDispatcher.UnregisterEvent(EventType type)
   at Microsoft.Xna.Framework.Audio.KernelMicrophone.ShutdownCaptureEngine()
   at Microsoft.Xna.Framework.Audio.MicrophoneUnsafeNativeMethods.ShutdownCaptureEngine()
   at Microsoft.Xna.Framework.Audio.AudioRendererShutdownHandler.AppExitingEventHandler(Object sender, EventArgs args)
	-Problem with the XNA framework when you manually(correctly) dispose of sound effects on closing. The solution is to let the ContentManager handle the disposale of SFX's
	-This didn't solve the problem either
[*]AI is marking its waypoint as unwalkable so when units are passing through one (can see this on map 6 mostly) they avoid the space even though its empty
[*]Problem with AI grabbing wrong waypoint when direction is counter clockwise and starting location is not on
	a waypoint. Should be grabbing the last node but is grabbing 2nd last
[*]Hitting escape in the game and than returning to the game causes the game to play for the rest of the transition in but than pause
[*]Need a comparator for the maps directory. Default string one thinks the order should be Map1, Map10, Map2...etc
[*]Getting caught and replaying via the replay button, you cannot start
[*]Stationary guards don't activate if you are detected
[*]Treasure bounding boxes are not centered


===========================
	Removed features
===========================
Most of these features were due to scope creep anyway
[]Put in collision detection with each of the guards so they don't stack		
	-Removed this as it was causing problems because the guards only generate paths to way points once, not every new square
[]Couple extra guards run in from the exit point if you are detected
	-Don't implement this until a lot more is figured out such as what happens if you go into a garbage can?
[]Add in random sneezing if you stand within the same tile too long
[]LOS Detection triangle
[]Radius sphere is for noise detection
[]Switch AI to use the Walker algorithm with no cutting corners opposed to the current MazeSolver algorithm. Guards should be able to move in all 8 directions instead of just 4 cardinal
	-Removed because the game works fine with 4 cardinal directions
[]Pause at waypoints??	
	-Not certain I want this still
[]When the player walks into a tile that is a wall the AI will walk right through it (on chase mode), implement one or the other or both of the below
	[]Make it so if the player walks against a wall the Tile that the player is on (from an AI perspective) will not update, so the AI will know there is a wall there
	[]Tile smasher...smash each tile into 9 tiles from an AI perspective
	-Had the tile smasher 75% implemented and the code with the guard movement etc became a disaster so removed all of the tile breaker and will
		let this bug remain in the game. This will be a watching point in my next game.
[]Cinematic of Rob falling through the roof
	-Not interested in making an animation for this

============================
		Time
============================
Planning: 2 hours		1:30pm-1:34pm
Programming:	68.25 hours		
Level Design(Including creating editor via scripting engine):	15 hours	
Art: 10.25 hours			
Sound:	4.25 hours		1:34pm-
Deployment: .5 hours
Alpha-testing:4 hours		
Total Time:
	